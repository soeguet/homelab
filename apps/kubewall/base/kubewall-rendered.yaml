---
# Source: kubewall/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubewall
  namespace: kubewall
  labels:
    helm.sh/chart: kubewall-0.0.11
    app.kubernetes.io/name: kubewall
    app.kubernetes.io/instance: kubewall
    app.kubernetes.io/version: "0.0.11"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubewall/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kubewall-data
  namespace: kubewall
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Mi
---
# Source: kubewall/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubewall-cluster-admin-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubewall
    namespace: kubewall
---
# Source: kubewall/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubewall
  namespace: kubewall
  labels:
    helm.sh/chart: kubewall-0.0.11
    app.kubernetes.io/name: kubewall
    app.kubernetes.io/instance: kubewall
    app.kubernetes.io/version: "0.0.11"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: kubewall
    app.kubernetes.io/instance: kubewall
---
# Source: kubewall/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubewall
  namespace: kubewall
  labels:
    helm.sh/chart: kubewall-0.0.11
    app.kubernetes.io/name: kubewall
    app.kubernetes.io/instance: kubewall
    app.kubernetes.io/version: "0.0.11"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubewall
      app.kubernetes.io/instance: kubewall
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubewall
        app.kubernetes.io/instance: kubewall
    spec:
      serviceAccountName: kubewall
      securityContext: {}
      containers:
        - name: kubewall
          command: ["kubewall", "--no-open-browser"]
          args:
            - --certFile=/etc/ssl/certs/tls.crt
            - --keyFile=/etc/ssl/certs/tls.key
            - --port=8443
          securityContext: {}
          image: "ghcr.io/kubewall/kubewall:0.0.11"
          imagePullPolicy: IfNotPresent
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: tls-certs
              mountPath: "/etc/ssl/certs"
              readOnly: true
            - name: kubewall-data
              mountPath: /.kubewall
      volumes:
        - name: tls-certs
          secret:
            secretName: kubewall-tls-secret
        - name: kubewall-data
          persistentVolumeClaim:
            claimName: kubewall-data
